#Faints out on Python 3 (TLE, 11%)
#PyPy3 took 2328ms
from sys import stdin
input=stdin.readline

ansu_predefined={
    ## The following takes more than a second to calculate ##
    999999: 1000009999989,
    
    1000001: 1000010000009,
    2000002: 2000010000008,
    3000003: 1000030000029,
    4000004: 2000010000008,
    5000005: 5000010000005,
    6000006: 2000030000028,

    1999998: 2000009999988,
    2999997: 1000009999989,
    3999996: 2000009999988,
    4999995: 5000009999985,
    5999994: 2000019999978,
    9999990: 10000099999890,

    10000001: 100000100000009,
    20000002: 200000100000008,
    30000003: 100000300000029,
    40000004: 200000100000008,
    50000005: 500000100000005,
    60000006: 200000300000028,
    70000007: 100000400000039,
    80000008: 200000100000008,
    90000009: 100000900000089,

    14999985: 5000019999975,
    15000015: 5000030000025,
    19999980: 20000099999880,
    20000020: 20000100000080,
    29999970: 10000099999890,
    30000030: 10000300000290,
    39999960: 20000099999880,
    40000040: 20000100000080,
    49999950: 50000099999850,
    50000050: 50000100000050,
    59999940: 20000199999780,
    60000060: 20000300000280,
    99999900: 100000999998900,

    #This PARTICULAR number takes 382 seconds to calculate according to CPU time
    #(This number) < 10^18, proving printing -1 is impossible
    99999999: 10000000999999989 
}
for _ in range(int(input())):
    real_n=int(input())
    if real_n in ansu_predefined:
        print(ansu_predefined[real_n])
        continue
    
    n=real_n
    while(1):
        n=str(n)
        # if len(n)>18: 
        #     print(-1)
        #     break
        sigma=0
        for num in n: sigma+=int(num)
        if sigma%2: 
            print(n)
            break
        n=int(n)
        n+=real_n